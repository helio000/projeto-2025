generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}


model aluno {
  id          Int         @id @default(autoincrement())
  nome        String      @db.VarChar(100)
  email       String      @unique @db.VarChar(100)
  telefone    String      @db.VarChar(20)
  datanasc    DateTime    @db.Date
  arteMarcial String      @db.VarChar(50)
  matricula   matricula[]
}

model matricula {
  id            Int       @id @default(autoincrement())
  alunoId       Int
  turmaId       Int
  dataMatricula DateTime? @default(dbgenerated("(curdate())")) @db.Date
  aluno         aluno     @relation(fields: [alunoId], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "matricula_ibfk_1")
  turma         turma     @relation(fields: [turmaId], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "matricula_ibfk_2")

  @@index([alunoId], map: "alunoId")
  @@index([turmaId], map: "turmaId")
}

model professor {
  id          Int     @id @default(autoincrement())
  nome        String  @db.VarChar(100)
  email       String  @unique @db.VarChar(100)   // ðŸ”’ TambÃ©m Ãºnico para professores
  telefone    String? @db.VarChar(20)
  arteMarcial String? @db.VarChar(50)
  turma       turma[]
}

model turma {
  id          Int         @id @default(autoincrement())
  nome        String      @db.VarChar(50)
  arteMarcial String?     @db.VarChar(50)
  professorId Int?
  matricula   matricula[]
  professor   professor?  @relation(fields: [professorId], references: [id], onUpdate: Restrict, map: "turma_ibfk_1")

  @@index([professorId], map: "professorId")
}
